using System;
public class Triangle
   {
   public static bool IsCollinear(int x1, int y1, int x2, int y2, int x3, int y3)
    {
        return (y1 - y2) * (x1 - x3) == (y1 - y3) * (x1 - x2);
    }
    public static double CalculateDistance(int x1, int y1, int x2, int y2)
    {
        return Math.Sqrt(Math.Pow(x2 - x1, 2) + Math.Pow(y2 - y1, 2));
    }
     public static void FindSeg(int x1, int y1, int x2, int y2, int x3, int y3)
    {
        double length12 = CalculateDistance(x1, y1, x2, y2);
        double length23 = CalculateDistance(x2, y2, x3, y3);
        double length31 = CalculateDistance(x3, y3, x1, y1);

        if (IsCollinear(x1, y1, x2, y2, x3, y3))
        {
            Console.WriteLine($"Points are collinear. Segment length: {length12 + length23}");
        }
        else
        {
            Console.WriteLine("Points are not collinear.");
        }
    }
    public static double CalculateArea(int x1, int y1, int x2, int y2, int x3, int y3)
    {
        double a = CalculateDistance(x1, y1, x2, y2);
        double b = CalculateDistance(x2, y2, x3, y3);
        double c = CalculateDistance(x3, y3, x1, y1);
        double s = (a + b + c) / 2;
        return Math.Sqrt(s * (s - a) * (s - b) * (s - c));
    }
   public static void FindArea(int x1, int y1, int x2, int y2, int x3, int y3)
    {
        if (!IsCollinear(x1, y1, x2, y2, x3, y3))
        {
            double area = CalculateArea(x1, y1, x2, y2, x3, y3);
            Console.WriteLine($"Area of the triangle: {area}\n");
        }
        else
        {
            Console.WriteLine("Points are collinear. Cannot calculate area.");
        }
    }

   public static int GetQuadrant(int x, int y)
    {
        if (x > 0 && y > 0)
            return 1;
        else if (x < 0 && y > 0)
            return 2;
        else if (x < 0 && y < 0)
            return 3;
        else if (x > 0 && y < 0)
            return 4;
        else
            return 0; // Origin or on axis
    }
   public static  void FindQuad(int x1, int y1, int x2, int y2, int x3, int y3)
    {
       Console.WriteLine($"Point 1 ({x1}, {y1}) is in quadrant {GetQuadrant(x1, y1)} Point 2 ({x2}, {y2}) is in quadrant {GetQuadrant(x2, y2)} Point 3 ({x3}, {y3}) is in quadrant {GetQuadrant(x3, y3)}");
    }
   }



class Program
{
 public delegate void Operation(int x1, int y1, int x2, int y2, int x3, int y3);  
    static void Main(String[] args)
    {
        int x1 = Convert.ToInt32(Console.ReadLine());
        int y1 = Convert.ToInt32(Console.ReadLine());
        int x2 = Convert.ToInt32(Console.ReadLine());
        int y2 = Convert.ToInt32(Console.ReadLine());
        int x3 = Convert.ToInt32(Console.ReadLine());
        int y3 = Convert.ToInt32(Console.ReadLine());
        Operation delegateoperation = Triangle.FindQuad;
        delegateoperation+=Triangle.FindSeg;
        delegateoperation+=Triangle.FindArea;
         delegateoperation(x1,y1,x2,y2,x3,y3);
    //  Console.WriteLine(result);
    }

}
